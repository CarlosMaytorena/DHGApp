@model AgricolaDH_GApp.ViewModels.AlmacenVM
<form id="lista">
    <div class="card card-margin">
        <div class="row card-row-spacer">
            <div class="col-md-12">
                <label style="font-weight: normal; text-align: left; float: left">ID Producto</label>
                @Html.EditorFor(m => m.almacen.SerialNumber, new { htmlAttributes = new { @class = "form-control input-focus escanear", @placeholder = "Escanea el producto aqui"} })
            </div>
        </div>
        <div class="row card-row-spacer">
        </div>
    </div>
    @{
        if(Model.almacenLista.Count > 0)
        {
            <div class="card card-margin">
                <div class="card-header">
                    <h3 class="card-title">Lista de Productos</h3>
                    &nbsp;
                    &nbsp;
                    &nbsp;
                    &nbsp;
                    <button type="button" class="btn-sm secondary-background-color eliminarAlmacenLista" style="color: white; border: 0px">
                        <i class="nav-icon fas fa-minus"></i>
                    </button>
                </div>
                <div class="row card-row-spacer">
                    <div class="col-md-4">
                        <label style="font-weight: normal; text-align: left; float: left">Producto ID</label>
                    </div>
                    <div class="col-md-4">
                        <label style="font-weight: normal; text-align: left; float: left">Producto</label>
                    </div>
                    <div class="col-md-4">
                        <label style="font-weight: normal; text-align: left; float: left">Descripcion</label>
                    </div>
                </div>

                @for (int i = 0; i < Model.almacenLista.Count; i++)
                {
                    <div class="row card-row-spacer">
                        @Html.HiddenFor(m => m.almacenLista[i].IdAlmacen)
                        @Html.HiddenFor(m => m.almacenLista[i].IdProducto)
                        @Html.HiddenFor(m => m.almacenLista[i].IdEstatus)
                        @Html.HiddenFor(m => m.almacenLista[i].Estatus)
                        <div class="col-md-4">
                            @Html.EditorFor(m => m.almacenLista[i].SerialNumber, new { htmlAttributes = new { @class = "form-control input-focus", @readonly = "readonly" } })
                        </div>
                        <div class="col-md-4">
                            @Html.EditorFor(m => m.almacenLista[i].NombreProducto, new { htmlAttributes = new { @class = "form-control input-focus", @readonly = "readonly" } })
                        </div>
                        <div class="col-md-4">
                            @Html.EditorFor(m => m.almacenLista[i].Descripcion, new { htmlAttributes = new { @class = "form-control input-focus", @readonly = "readonly" } })
                        </div>
                    </div>
                }
                <div class="row card-row-spacer">
                </div>
            </div>
        }
    }
    <div class="card card-margin">
    </div>

</form>

<script>
    $(document).ready(function () {
        let inputBuffer = '';
        let lastInputTime = Date.now();
        const scanThreshold = 50; // ms between characters (adjust as needed)
        const minScanLength = 5;  // minimum length for a scan

        $('.escanear').on('paste drop', function (e) {
            e.preventDefault();
            return false;
        });
        $('.escanear').on('keypress', function (event) {
            const now = Date.now();
            if (now - lastInputTime > scanThreshold) {
                inputBuffer = '';
            }
            lastInputTime = now;

            // Allow numbers, uppercase/lowercase letters, and Enter
            if (
                (event.which >= 48 && event.which <= 57) ||   // 0-9
                (event.which >= 65 && event.which <= 90) ||   // A-Z
                (event.which >= 97 && event.which <= 122) ||  // a-z
                event.which === 13                            // Enter
            ) {
                // If Enter is pressed, check if buffer is a scan
                if (event.which === 13) {
                    event.preventDefault();
                    if (inputBuffer.length >= minScanLength) {
                        var dataform = $("#lista");
                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("AgregarProductoLista", "Egresos")',
                            data: dataform.serialize(),
                            success: function (data) {
                                $("#ListaDeProductos").html(data);
                                $("input[name='almacen.SerialNumber']").val("").focus();
                            }
                        });
                    }
                    inputBuffer = '';
                } else {
                    inputBuffer += String.fromCharCode(event.which);
                }
            } else {
                // Block any other input
                event.preventDefault();
            }
        });

        $('.eliminarAlmacenLista').click(function () {
            var dataform = $("#lista");
            //alert(dataform.serialize());
            $.ajax({
                type: "POST",
                url: '@Url.Action("EliminarProductoLista", "Almacen")',
                data: dataform.serialize(),
                success: function (data) {
                    $("#ListaDeProductos").html(data);
                }
            });
        });

    });
</script>
