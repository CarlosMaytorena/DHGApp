@model AgricolaDH_GApp.ViewModels.EgresosVM

    <div class="row top-row-spacer">
        <div class="col-md-5">
            <h4 class="page-title">Egresos</h4>
        </div>
        <div class="col-md-5">
        </div>
        <div class="col-md-2">
            <button class="btn btn-block secondary-background-color index" style="color: white">
                <i class="nav-icon fas fa-arrow-left"></i>
                Regresar
            </button>
        </div>
    </div>

    <div class="card card-margin">
        <div class="row card-row-spacer">
            <div class="col-md-4">
                @Html.HiddenFor(m => m.egreso.IdEgreso)
                <label style="font-weight: normal; text-align: left; float: left">Numero de Serie</label>
                @Html.EditorFor(m => m.egreso.SerialNumber, new { htmlAttributes = new { @class = "form-control input-focus", @readonly = "readonly" } })
            </div>
            <div class="col-md-4">
                <label style="font-weight: normal; text-align: left; float: left">Producto</label>
                @Html.EditorFor(m => m.egreso.Producto, new { htmlAttributes = new { @class = "form-control input-focus", @readonly = "readonly" } })
            </div>
            <div class="col-md-4">
                <label style="font-weight: normal; text-align: left; float: left">Fecha</label>
                @Html.EditorFor(m => m.egreso.Fecha, new { htmlAttributes = new { @class = "form-control input-focus", @readonly = "readonly", @type="text" } })
            </div>
        </div>
        <div class="row card-row-spacer">
            <div class="col-md-4">
                <label style="font-weight: normal; text-align: left; float: left">Generado Por</label>
                @Html.EditorFor(m => m.egreso.Solicitante, new { htmlAttributes = new { @class = "form-control input-focus", @readonly = "readonly" } })
            </div>
            <div class="col-md-4">
                <label style="font-weight: normal; text-align: left; float: left">Evidencia Antes</label>
                <div class="input-group">
                    <div class="custom-file">
                        @Html.EditorFor(m => m.egreso.PathAntes, new { htmlAttributes = new { @class = "form-control input-focus", @readonly = "readonly", @type = "text" } })
                    </div>
                    <div class="input-group-append">
                    <button class="input-group-text descargar">
                            <i class="nav-icon fas fa-arrow-circle-down"></i>
                        </button>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <label style="font-weight: normal; text-align: left; float: left">Evidencia Despues</label>
                <div class="input-group">
                    <div class="custom-file">
                        @Html.EditorFor(m => m.egreso.PathDespues, new { htmlAttributes = new { @class = "form-control input-focus", @readonly = "readonly", @type = "text" } })
                    </div>
                    <div class="input-group-append">
                        <button class="input-group-text descargar">
                            <i class="nav-icon fas fa-arrow-circle-down"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <br />
    </div>

<script>
    $(document).ready(function () {
        $(".index").click(function () {
            $.ajax({
                type: "GET",
                url: '@Url.Action("Index", "Egresos")',
                contentType: "application/json; charset=utf-8",
                data: {},
                success: function (data) {
                    $("#HtmlBody").html(data);
                }
            });
        });

        $(".descargar").click(function (event) {
            event.preventDefault(); // Prevents the default action (like submitting a form or following a link)
            var filename = $(this).closest('.input-group').find('input').val(); // Gets the filename from the nearest input field
            
            if (filename) {
                var url = '/Egresos/DescargarArchivo?filename=' + encodeURIComponent(filename); // Builds the download URL with the filename as a query parameter
                fetch(url, { // Uses the Fetch API to make a GET request to the server
                    method: 'GET',
                    credentials: 'same-origin' // Ensures cookies (for authentication) are sent if needed
                })
                .then(response => {
                    if (!response.ok) throw new Error('Network response was not ok'); // Checks if the response is OK
                    return response.blob(); // Converts the response to a Blob (binary data)
                })
                .then(blob => {
                    var link = document.createElement('a'); // Creates a temporary <a> element
                    link.href = window.URL.createObjectURL(blob); // Creates a URL for the Blob
                    link.download = filename; // Sets the suggested filename for download
                    document.body.appendChild(link); // Adds the link to the document
                    link.click(); // Simulates a click to start the download
                    document.body.removeChild(link); // Removes the link from the document
                    window.URL.revokeObjectURL(link.href); // Cleans up the Blob URL
                })
                .catch(error => {
                    alert('Error downloading file: ' + error); // Alerts the user if there was an error
                });
            }
        });
    });
</script>

