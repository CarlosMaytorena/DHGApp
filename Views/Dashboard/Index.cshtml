<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<div class="row top-row-spacer" style="margin-bottom: 5vh">
    <div class="col-md-6">
        <h4 class="page-title">Dashboard</h4>
    </div>
</div>


<div class="text-center">
    
    <div class="row" style="margin-bottom: 3vh;">
        <div class="col-4 dashboard-container">
            <div class="dashboard-kpi-card" style="background-color: #5a8f7b">
                <div class="dashboard-kpi-card-title-filter">
                    <h6 style="color: white">Porcentaje de venta por rancho</h6>
                    <select id="ranchoSelect" onchange="ventaPorRancho()" style="color: white; background-color: #5a8f7b">
                        <option value="">Rancho</option>
                    </select>
                </div>
                <div class="dashboard-kpi-card-value">
                    <span id="porcentajeVenta" style="font-size: 2em; color: white;"></span>
                </div>
            </div>
        </div>

        <div class="col-4 dashboard-container">
            <div class="dashboard-kpi-card" style="background-color: #5a8f7b">
                <div class="dashboard-kpi-card-title-filter">
                    <h6 style="color: white">Cantidad de ordenes por status</h6>
                    <select id="statusSelect" onchange="ordenesDeCompraPorStatus()" style="color: white; background-color: #5a8f7b">
                        <option value="">Status</option>
                    </select>
                </div>
                <div class="dashboard-kpi-card-value">
                    <span id="cantidadOrdenes" style="font-size: 2em; color: white;"></span>
                </div>
            </div>
        </div>
        <div class="col-4 dashboard-container">
            <div class="dashboard-kpi-card" style="background-color: #5a8f7b">
                <div class="dashboard-kpi-card-title-filter">
                    <h6 style="color: white">Cantidad en almacen por tipo de movimiento</h6>
                    <select id="movimientoSelect" onchange="almacenPorMovimiento()" style="color: white; background-color: #5a8f7b">
                        <option value="">Movimiento</option>
                    </select>
                </div>
                <div class="dashboard-kpi-card-value">
                    <span id="almacenPorMovimiento" style="font-size: 2em; color: white;"></span>
                </div>
            </div>
        </div>
    </div>
</div>

    <div class="row" style="margin-bottom: 3vh;">
        <div class="col-4 dashboard-container">
            <div class="dashboard-report-card">
                <div class="dashboard-chart-title">
                    <h6>Ordenes por area</h6>
                </div>
                <hr style="width: 90%; height: 2px; color: gray;">
            <canvas id="ordenesPorArea" style="width: 100%; height: 100%; max-height: 250px;"></canvas>
            <div id="noData-ordenesPorArea" style="display: none; text-align: center; padding: 1rem;">
                <h6 style="color: #333; margin-bottom: 0.5rem;">No hay datos para mostrar</h6>
                <p style="color: #999; font-size: 0.85rem;">No se encontraron registros en este periodo</p>
            </div>

            </div>
        </div>
        <div class="col-4 dashboard-container">
            <div class="dashboard-report-card">
                <div class="dashboard-chart-title">
                    <h6>Ordenes por cultivo</h6>
                </div>
                <hr style="width: 90%; height: 2px; color: gray;">
                <canvas id="ordenesPorCultivo" style="width: 100%; height: 100%; max-height: 250px;"></canvas>
                <div id="noData-ordenesPorCultivo" style="display: none; text-align: center; padding: 1rem;">
                    <h6 style="color: #333; margin-bottom: 0.5rem;">No hay datos para mostrar</h6>
                    <p style="color: #999; font-size: 0.85rem;">No se encontraron registros en este periodo</p>
                </div>
            </div>
        </div>
        <div class="col-4 dashboard-container">
            <div class="dashboard-report-card">
                <div class="dashboard-chart-title">
                    <h6>Ordenes por etapa</h6>
                </div>
                <hr style="width: 90%; height: 2px; color: gray;">
                <canvas id="ordenesPorEtapa" style="width: 100%; height: 100%; max-height: 250px;"></canvas>
                <div id="noData-ordenesPorEtapa" style="display: none; text-align: center; padding: 1rem;">
                    <h6 style="color: #333; margin-bottom: 0.5rem;">No hay datos para mostrar</h6>
                    <p style="color: #999; font-size: 0.85rem;">No se encontraron registros en este periodo</p>
                </div>

            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-4 dashboard-container">
            <div class="dashboard-report-card">
                <div class="dashboard-chart-title">
                    <h6>Ordenes por proveedor</h6>
                </div>
                <hr style="width: 90%; height: 2px; color: gray;">
                <canvas id="ordenesPorProveedor" style="width: 100%; height: 100%; max-height: 250px;"></canvas>
                <div id="noData-ordenesPorProveedor" style="display: none; text-align: center; padding: 1rem;">
                    <h6 style="color: #333; margin-bottom: 0.5rem;">No hay datos para mostrar</h6>
                    <p style="color: #999; font-size: 0.85rem;">No se encontraron registros en este periodo</p>
                </div>
            </div>
        </div>
        <div class="col-8 dashboard-container">
            <div class="dashboard-report-card">
                <div class="dashboard-chart-title">
                    <h6>Ordenes por producto</h6>
                </div>
                <hr style="width: 95%; height: 2px; color: gray;">
                <canvas id="totalPorProducto" style="width: 100%; height: 100%;"></canvas>
                <div id="noData-totalPorProducto" style="display: none; text-align: center; padding: 1rem;">
                    <h6 style="color: #333; margin-bottom: 0.5rem;">No hay datos para mostrar</h6>
                    <p style="color: #999; font-size: 0.85rem;">No se encontraron registros en este periodo</p>
                </div>
            </div>
        </div>
    </div>

<script>

    // ======================================== KPIs ========================================
    async function ventaPorRancho(){
        // Get the selected IdRancho from the dropdown
        const ranchoName = document.getElementById('ranchoSelect').value;

        // Prepare the URL with the IdRancho query parameter
        let url = '/Dashboard/ventaPorRancho';
        if (ranchoName) {
            url += `?ranchoName=${ranchoName}`;
        }

        // Fetch data from the server
        const response = await fetch(url);
        const data = await response.json();

        if (data.length > 0) {
            var porcentaje = (data[0].porcentaje * 100).toFixed(1);
            document.getElementById("porcentajeVenta").textContent = porcentaje > 0 ? porcentaje + "%" : "0%";
        } else {
            document.getElementById("porcentajeVenta").textContent = "-";
        }

    }

    async function opcionesRancho() {
        const response = await fetch('/Dashboard/opcionesRancho');
        const ranchos = await response.json();

        const ranchoSelect = document.getElementById('ranchoSelect');

        // Clear existing options
        ranchoSelect.innerHTML = '<option value="">Rancho</option>';

        // Add each rancho as an option
        ranchos.forEach(rancho => {
            const option = document.createElement('option');
            option.value = rancho;
            option.textContent = `${rancho}`;
            ranchoSelect.appendChild(option);
        });
    }

    async function ordenesDeCompraPorStatus(){
            // Get the selected status from the dropdown
        const descripcionStatus = document.getElementById('statusSelect').value;

        // Prepare the URL with the descripcionEstatus query parameter
        let url = '/Dashboard/ordenDeCompraPorStatus';
        if (descripcionStatus) {
            url += `?descripcionStatus=${encodeURIComponent(descripcionStatus)}`;
        }

        // Fetch data from the server
        const response = await fetch(url);
        const data = await response.json();

        if(data.length > 0){
            data.forEach(opcionStatus => {
            if(opcionStatus.status == descripcionStatus){
                count = opcionStatus.cantidad;
                document.getElementById("cantidadOrdenes").textContent = count > 0 ? count : "0";
            }
        })
        }else {
            document.getElementById("cantidadOrdenes").textContent = "-";
        }

    }

    async function opcionesStatus() {
        const response = await fetch('/Dashboard/opcionesStatus');
        const status = await response.json();

        statusSelect.innerHTML = '<option value="">Status</option>';

        status.forEach(status => {
            const option = document.createElement('option');
            option.value = status;
            option.textContent = `${status}`;
            statusSelect.appendChild(option);
        });
    }

        async function almacenPorMovimiento(){
            // Get the selected status from the dropdown
        const descripcionMovimiento = document.getElementById('movimientoSelect').value;

        // Prepare the URL with the descripcionEstatus query parameter
        let url = '/Dashboard/almacenPorMovimiento';
        if (descripcionMovimiento) {
            url += `?descripcionMovimiento=${encodeURIComponent(descripcionMovimiento)}`;
        }

        // Fetch data from the server
        const response = await fetch(url);
        const data = await response.json();

        if(data.length > 0){
            data.forEach(opcionMovimiento => {
            if(opcionMovimiento.movimiento == descripcionMovimiento){
                count = opcionMovimiento.cantidad;
                document.getElementById("almacenPorMovimiento").textContent = count > 0 ? count : "0";
            }
        })
        }else {
            document.getElementById("almacenPorMovimiento").textContent = "-";
        }

    }

    async function opcionesMovimiento() {
        const response = await fetch('/Dashboard/opcionesMovimiento');
        const movimiento = await response.json();

        movimientoSelect.innerHTML = '<option value="">Movimiento</option>';

        movimiento.forEach(movimiento => {
            const option = document.createElement('option');
            option.value = movimiento;
            option.textContent = `${movimiento}`;
            movimientoSelect.appendChild(option);
        });
    }

    // ======================================== Primer Linea de graficas ========================================

    async function ordenesPorArea() {
        const response = await fetch('/Dashboard/ordenesPorArea');
        const data = await response.json();

        const canvas = document.getElementById('ordenesPorArea');
        const noDataDiv = document.getElementById('noData-ordenesPorArea');

        if (data.length === 0) {
            canvas.style.display = 'none';
            noDataDiv.style.display = 'block';
            return;
        }

        canvas.style.display = 'block';
        noDataDiv.style.display = 'none';

        const labels = data.map(item => item.area);
        const values = data.map(item => item.cantidad);

        new Chart(canvas.getContext('2d'), {
            type: 'doughnut',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Órdenes por Area',
                    data: values,
                    backgroundColor: ['#86c5a6', '#5a8f7b', '#f4f4f4', '#a3c9b4', '#6b9984', '#c7ded4', '#4f7a6a', '#b0d1bf'],
                }]
            },
            options: {
                responsive: true
            }
        });
    }

    async function ordenesPorCultivo() {
        const response = await fetch('/Dashboard/ordenesPorCultivo');
        const data = await response.json();

        const canvas = document.getElementById('ordenesPorCultivo');
        const noDataDiv = document.getElementById('noData-ordenesPorCultivo');

        if (data.length === 0) {
            canvas.style.display = 'none';
            noDataDiv.style.display = 'block';
            return;
        }

        canvas.style.display = 'block';
        noDataDiv.style.display = 'none';

        const labels = data.map(item => item.cultivo);
        const values = data.map(item => item.cantidad);

        new Chart(canvas.getContext('2d'), {
            type: 'doughnut',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Órdenes por Cultivo',
                    data: values,
                    backgroundColor: ['#86c5a6', '#5a8f7b', '#f4f4f4', '#a3c9b4', '#6b9984', '#c7ded4', '#4f7a6a', '#b0d1bf'],
                }]
            },
            options: {
                responsive: true
            }
        });
    }

    async function ordenesPorEtapa() {
        const response = await fetch('/Dashboard/ordenesPorEtapa');
        const data = await response.json();

        const canvas = document.getElementById('ordenesPorEtapa');
        const noDataDiv = document.getElementById('noData-ordenesPorEtapa');

        if (data.length === 0) {
            canvas.style.display = 'none';
            noDataDiv.style.display = 'block';
            return;
        }

        canvas.style.display = 'block';
        noDataDiv.style.display = 'none';

        const labels = data.map(item => item.etapa);
        const values = data.map(item => item.cantidad);

        new Chart(canvas.getContext('2d'), {
            type: 'doughnut',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Órdenes por Etapa',
                    data: values,
                    backgroundColor: ['#86c5a6', '#5a8f7b', '#f4f4f4', '#a3c9b4', '#6b9984', '#c7ded4', '#4f7a6a', '#b0d1bf'],
                }]
            },
            options: {
                responsive: true
            }
        });
    }

    // ======================================== Segunda Linea de graficas ========================================

    async function ordenesPorProveedor() {
        const response = await fetch('/Dashboard/ordenesPorProveedor');
        const data = await response.json();

        const canvas = document.getElementById('ordenesPorProveedor');
        const noDataDiv = document.getElementById('noData-ordenesPorProveedor');

        if (data.length === 0) {
            canvas.style.display = 'none';
            noDataDiv.style.display = 'block';
            return;
        }

        canvas.style.display = 'block';
        noDataDiv.style.display = 'none';

        const labels = data.map(item => item.proveedor);
        const values = data.map(item => item.cantidad);

        new Chart(canvas.getContext('2d'), {
            type: 'doughnut',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Órdenes por Proveedor',
                    data: values,
                    backgroundColor: ['#86c5a6', '#5a8f7b', '#f4f4f4', '#ffcc00', '#ff6666'],
                }]
            },
            options: {
                responsive: true
            }
        });
    }

    async function TotalPorProducto() {
        const response = await fetch('/Dashboard/TotalPorProducto');
        const data = await response.json();

        const canvas = document.getElementById('totalPorProducto');
        const noDataDiv = document.getElementById('noData-totalPorProducto');

        if (data.length === 0) {
            canvas.style.display = 'none';
            noDataDiv.style.display = 'block';
            return;
        }

        canvas.style.display = 'block';
        noDataDiv.style.display = 'none';

        const labels = data.map(item => item.producto);
        const values = data.map(item => item.cantidad);

        new Chart(canvas.getContext('2d'), {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Total por producto',
                    data: values,
                    backgroundColor: ['#86c5a6', '#5a8f7b', '#f4f4f4'],
                }]
            },
            options: {
                responsive: true
            }
        });
    }

    // Call the function to render the chart
    // ============== KPIs ==============
    ventaPorRancho();

    opcionesRancho();

    ordenesDeCompraPorStatus();

    opcionesStatus();

    almacenPorMovimiento();

    opcionesMovimiento();

    // ============== Graficas ==============
    ordenesPorArea();

    ordenesPorCultivo();

    ordenesPorEtapa();

    ordenesPorProveedor();

    TotalPorProducto();
</script>